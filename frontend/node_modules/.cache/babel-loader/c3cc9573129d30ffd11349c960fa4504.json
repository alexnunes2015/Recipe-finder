{"ast":null,"code":"var _jsxFileName = \"/home/alexandre/git/Recipe-finder/frontend/src/App.js\";\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IngredientsSelection from \"./Screens/IngredientsSelection/IngredientsSelection\";\nimport { REST_URL } from './REST_URL';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredientes: [\"Batatas\", \"Oleo\", \"Ovos\", \"Leite\", \"Farinha\", \"Bifes\", \"Açucar\", \"Sal\", \"Abacate\", \"Arroz\", \"Alho Frances\"],\n      selected: [],\n      currentPage: \"select\"\n    };\n    this.addItem = this.addItem.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n  }\n\n  onSearch() {\n    this.setState({\n      currentPage: \"results\"\n    });\n    let ings = \"\";\n    let first = true;\n    this.state.selected.forEach(element => {\n      if (element !== \"\") {\n        if (first) {\n          ings = element;\n          first = false;\n        } else {\n          ings = ings + \"|\" + element;\n        }\n      }\n    });\n    fetch(REST_URL + '/search.php?ing=' + ings).then(response => response.json()).then(json => {\n      console.log(json);\n    });\n  }\n\n  addItem(e) {\n    if (e.target.checked) {\n      let tmpArr = [];\n      tmpArr = this.state.selected;\n      tmpArr.push(e.target.id);\n      this.setState({\n        selected: tmpArr\n      });\n    } else {\n      let tmpId = e.target.id;\n      let arr = this.state.selected.filter(e => e !== tmpId);\n      this.setState({\n        selected: arr\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexGrow: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        flexGrow: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Recipe Finder\"))), this.state.currentPage === \"select\" ? /*#__PURE__*/React.createElement(IngredientsSelection, {\n      addItem: this.addItem,\n      ingredientes: this.state.ingredientes,\n      onSearch: this.onSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }) : null);\n  }\n\n}","map":{"version":3,"sources":["/home/alexandre/git/Recipe-finder/frontend/src/App.js"],"names":["React","AppBar","Toolbar","Typography","IngredientsSelection","REST_URL","App","Component","constructor","props","state","ingredientes","selected","currentPage","addItem","bind","onSearch","setState","ings","first","forEach","element","fetch","then","response","json","console","log","e","target","checked","tmpArr","push","id","tmpId","arr","filter","render","flexGrow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IngredientsSelection from \"./Screens/IngredientsSelection/IngredientsSelection\";\nimport { REST_URL } from './REST_URL';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredientes: [\"Batatas\", \"Oleo\", \"Ovos\", \"Leite\", \"Farinha\", \"Bifes\", \"Açucar\", \"Sal\", \"Abacate\", \"Arroz\", \"Alho Frances\"],\n      selected: [],\n      currentPage: \"select\"\n    }\n    this.addItem = this.addItem.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n  }\n\n  onSearch() {\n    this.setState({\n      currentPage: \"results\"\n    })\n    let ings = \"\";\n    let first = true;\n    this.state.selected.forEach(element => {\n      if (element !== \"\") {\n        if (first) {\n          ings = element;\n          first = false;\n        } else {\n          ings = ings + \"|\" + element;\n        }\n      }\n    });\n    fetch(REST_URL + '/search.php?ing=' + ings)\n      .then(response => response.json())\n      .then(json => {\n        console.log(json);\n      });\n  }\n\n  addItem(e) {\n    if (e.target.checked) {\n      let tmpArr = [];\n      tmpArr = this.state.selected;\n      tmpArr.push(e.target.id);\n      this.setState({\n        selected: tmpArr\n      })\n    } else {\n      let tmpId = e.target.id;\n      let arr = this.state.selected.filter(e => e !== tmpId);\n      this.setState({\n        selected: arr\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ flexGrow: 1 }} >\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n              Recipe Finder\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        {this.state.currentPage === \"select\" ? (\n          <IngredientsSelection\n            addItem={this.addItem}\n            ingredientes={this.state.ingredientes}\n            onSearch={this.onSearch}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}